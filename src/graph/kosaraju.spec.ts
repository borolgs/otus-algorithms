import {kosaraju} from './kosaraju';

describe("Kosaraju Algorithm", () => {
  it("should return strongly connected components of directed graph", () => {
    /**
     Graph                                    Revered Graph
    ┌───┐      ┌───┐      ┌───┐      ┌───┐   ┌───┐      ┌───┐      ┌───┐      ┌───┐
    │   ├──────►   │      │   ├──────►   │   │   ◄──────┤   │      │   ◄──────┤   │
    │ 0 │      │ 1 ├──────► 2 │      │ 3 │   │ 0 │      │ 1 ◄──────┤ 2 │      │ 3 │
    │(1)│   ┌──┤(1)│      │(2)◄──────┤(2)│   │   │   ┌──►   │      │   ├──────►   │
    └─▲─┘   │  └─┬─┘      └─┬─┘      └▲─┬┘   └─┬─┘   │  └─▲─┘      └─▲─┘      └┬─▲┘
      │     │    │          │         │ │      │     │    │          │         │ │
      │     │    │          │         │ │      │     │    │          │         │ │
    ┌─┴─┐   │  ┌─▼─┐      ┌─▼─┐      ┌┴─▼┐   ┌─▼─┐   │  ┌─┴─┐      ┌─┴─┐      ┌▼─┴┐
    │   ◄───┘  │   ├──────►   │      │   │   │   ├───┘  │   ◄──────┤   │      │   │
    │ 4 │      │ 5 │      │ 6 ◄──────┤ 7 │   │ 4 │      │ 5 │      │ 6 ├──────► 7 │
    │(1)├──────►(3)◄──────┤(3)│      │(2)│   │   ◄──────┤   ├──────►   │      │   │
    └───┘      └───┘      └───┘      └───┘   └───┘      └───┘      └───┘      └───┘
    */
    const graph = [
      [1], // 0
      [2, 4, 5], // 1
      [3, 6], // 2
      [2, 7], // 3
      [0, 5], // 4
      [6], // 5
      [5], // 6
      [3, 6] // 7
    ];
    
    const componets = kosaraju(graph);

    expect(componets).toEqual([ [ 0, 4, 1 ], [ 2, 3, 7 ], [ 5, 6 ] ]);
  });
})